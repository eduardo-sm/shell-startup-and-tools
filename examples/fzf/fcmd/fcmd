#!/usr/bin/env bash

# NOTICE: This script needs to be sourced to access
# your current session aliases and functions

# Show aliases and functions in current session
available_commands="$(if [[ -n "$BASH" ]]; then
    {
      # Functions
      typeset -F | awk '{ if ( $3 !~ /_.+/) { print $3 } }';
      # Aliases
      compgen -a
      # alias | awk '{ split($2,o,"="); print o[1] }'
    }
  else
    {
      # Functions
      print -l ${(ok)functions} |
        awk '{ if ($1 !~ /^_.+/) { print $1 } }';
      # Aliases
      compgen -a
      # Only works if bashcompinit is set. Alternative:
      # alias | cut -d '=' -f 1
    }
  fi | sort)"

tmpfile="$(mktemp)"

# Cleanup file on exit
trap "rm -- '$tmpfile'" EXIT

# Get the output of type and store it in tmpfile
for cm in $(echo ${available_commands}); do
  echo ""
  type -f "$cm" 2>/dev/null || type "$cm" 2>/dev/null
done > "$tmpfile"

copy_command=()

if command -v pbcopy &> /dev/null; then
  copy_command=(
    --bind 'ctrl-y:execute-silent(echo -n {} | pbcopy)+abort'
    --header 'Press CTRL-Y to copy command into clipboard'
  )
elif command -v xsel &> /dev/null; then
  copy_command=(
    --bind 'ctrl-y:execute-silent(echo -n {} | xsel -ib)+abort'
    --header 'Press CTRL-Y to copy command into clipboard'
  )
elif command -v pbcopy.exe &> /dev/null; then
  copy_command=(
    --bind 'ctrl-y:execute-silent(printf \"%q\" {} | pbcopy.exe)+abort'
    --header 'Press CTRL-Y to copy command into clipboard'
  )
fi

echo "$available_commands" |
  fzf --height 50% --min-height 20 --border \
    --bind 'ctrl-/:change-preview-window(down|hidden|)' \
    --bind 'alt-up:preview-page-up' \
    --bind 'alt-down:preview-page-down' \
    --bind 'ctrl-s:toggle-sort' \
    --header 'Press CTRL-/ to toggle preview' \
    --preview "
      rg -A 50 -B 1 -m 1 '^{} ' $tmpfile |
      bat -l bash --color=always -p -H 2" \
    --preview-window right:70% \
    "${copy_command[@]}" || (exit 0) && true
